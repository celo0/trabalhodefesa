name: Trabalho
run-name: ${{ github.actor }}  
on:
  release:
    types: [created]
jobs:
  TrabalhoParte1:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout do repositÃ³rio
        uses: actions/checkout@v4

      - name: Configurando Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Realizando Build da Imagem
        run: docker build -t celo0/trabalhodefesa:${{ github.event.release.tag_name }} .
      
      - name: Executando Scan Dockle - CIS Benchmark
        uses: goodwithtech/dockle-action@v0.4.15
        with:
          image: 'celo0/trabalhodefesa:${{ github.event.release.tag_name }}'
          format: 'list'
          exit-code: '1'
          exit-level: 'fatal'
         # ignore: 'CIS-DI-0001,DKL-DI-0006,CIS-DI-0005,CIS-DI-0006,CIS-DI-0008'
          accept-key: 'org.opencontainers.image.version,org.opencontainers.image.ref.name,TZ' # Aceitando as chaves TZ (Timezone do container), org.opencontainers.image.version e org.opencontainers.image.ref.name (Chaves usadas pelo dockle action)

      - name: Executando Scan Trivy - Vulnerabilidades e segredos
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: 'celo0/trabalhodefesa:${{ github.event.release.tag_name }}'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL'
          ignore-unfixed: 'true'
          vuln-type: 'os,library'
          scanners: 'vuln,secret'

      - name: Efetuando login do Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Efetuando push para Docker Hub
        run: |
          docker push celo0/trabalhodefesa:${{ github.event.release.tag_name }}

      - name: Obtendo Digest da imagem
        run: |
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' celo0/trabalhodefesa:${{ github.event.release.tag_name }})
          echo "Digest: $DIGEST"
          echo "DIGEST=$DIGEST" >> $GITHUB_ENV

      - name: Instalando cosign
        uses: sigstore/cosign-installer@v3.8.1
        
      - name: Testando cosign
        run: cosign version

      - name: Assinando a Imagem com Cosign
        run: |
          echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
          cosign sign --key cosign.key celo0/trabalhodefesa:${{ github.event.release.tag_name }}

      
